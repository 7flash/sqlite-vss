name: "test build"
on:
  push:
    branches:
      - main
permissions:
  contents: read
jobs:
  test-ubuntu:
    name: Testing ubuntu-20.04
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          re
      - name: Cache sqlite build
        id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor
        run: ./get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make

      # TODO how cache this?
      - run: sudo apt-get install -y cmake libgomp1
      - name: build sqlite-vector dependency
        run: cmake -B build; make -C build
        working-directory: vendor/sqlite-vector/
      - name: build sqlite-vss
        run: cmake -B build; make -C build
      - run: make test
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-vss-ubuntu
          path: build/vss0.so
  test-macos:
    name: Testing macos-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Cache sqlite build
        id: cache-sqlite-build
        uses: actions/cache@v3
        with:
          path: vendor/sqlite
          key: ${{ runner.os }}-${{ hashFiles('vendor/get_sqlite.sh') }}
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor
        run: ./get_sqlite.sh
      - if: steps.cache-sqlite-build.outputs.cache-hit != 'true'
        working-directory: vendor/sqlite
        run: ./configure && make
      - run: brew install llvm
      - name: Cache cmake build
        id: cache-cmake-build
        uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-build
      - name: build sqlite-vector dependency
        run: cmake -B build; make -C build
        working-directory: vendor/sqlite-vector/
      - name: build sqlite-vss
        run: cmake -B build; make -C build
        env:
          # https://stackoverflow.com/questions/48825416/missing-openmp-c-flags-openmp-c-lib-names
          CC: /usr/local/opt/llvm/bin/clang
          CXX: /usr/local/opt/llvm/bin/clang++
          LDFLAGS: "-L/usr/local/opt/llvm/lib"
          CPPFLAGS: "-I/usr/local/opt/llvm/include"
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqlite-vss-macos
          path: build/vss0.dylib